*          DATA SET SFT8MVBFN1 AT LEVEL 002 AS OF 02/17/92
*          DATA SET SFT8MVBFN  AT LEVEL 002 AS OF 12/05/89              00001**1
         TITLE 'CURRENT JOB LOG PRINT PROGRAM'                          00002**1
*********************************************************************** 00003**1
*        THIS PROGRAM FULFILLS THE NEED TO HAVE JES2 JOBLOGS FROM     * 00004**1
*        CERTAIN STARTED TASKS.  IT WILL ALSO ALLOW THE JOBLOG TO     * 00005**1
*        BE ARCHIVED TO SAF IF DESIRED.                               * 00006**1
*                                                                     * 00007**1
*        IT MUST BE AUTHORIZED TO FUNCTION PROPERLY.                  * 00008**1
*                                                                     * 00009**1
*        INPUT CAN COME FROM EITHER THE EXEC PARM OR SYSIN.  IN BOTH  * 00010**1
*        CASES THE FORMAT IS ONE OR MORE OF THE FOLLOWING KEYWORDS    * 00011**1
*        SEPERATED BY BLANKS OR COMMAS:                               * 00012**1
*                                                                     * 00013**1
*                JLOG         REQUESTS THE JES JOB LOG                * 00014**1
*                JCL          REQUESTS THE OS JCL LISTING             * 00015**1
*                JMSG         REQUESTS THE OS ALLOCATION MSGS         * 00016**1
*                DSID(#,#,...#)  ONE TO NINE JES2 DATASET IDS (LAST   * 00017**1
*                                FIVE  CHARACTERS OF THE JES2 DSNAME: * 00018**1
*                                103 IN 'JES2.JOB00451.SO000103'      * 00019**1
*                                                                     * 00020**1
*                                                                     * 00021**1
*                                                                     * 00022**1
*                                                                     * 00023**1
*                       AUTHOR: GUY ALBERTELLI   07/18/82             * 00024**1
*                       LOCATION: SFT.LINKLIB                         * 00025**1
*                                                                     * 00026**1
*                       CHANGED 05/06/87 VAUGHN AUSTIN FOR IBM APAR   * 00027**1
*                       OZ93770 (PTF UZ82296 - HJE2330) WHICH CHANGED * 00028**1
*                       LENGTH OF DSID FOR PSO DATASETS TO 6 FROM 4.  * 00029**1
*                                                                     * 00030**1
*                       CHANGED 12/04/89 GUY ALBERTELLI FOR 370/ESA.  * 00031**1
*                        JES2 CHANGED THE NAME OF INPUT DSN FROM      * 00032**1
*                        '.SI000000' TO 'I0000000'                    * 00033**1
*                                                                     * 00034**1
*                       CHANGED 02/03/92 GUY ALBERTELLI FOR ESA 4.2.  * 00035**1
*                        JES2 CHANGED THE NAME OF INPUT DSN FROM      * 00036**1
*                        TO USER.JOBNAME.JOBID.DSID.? AND             * 00037**1
*                        CHANGED SPECIFICATION OF SYSIN TO TEXTUNIT.  * 00038**1
*                                                                     * 00039**1
*                       CHANGED 02/17/92 GUY ALBERTELLI               * 00040**2
*                        IN ESA 4.2 IF DSID HAS NEVER BEEN OPENED,    * 00041**2
*                        JES WILL ALLOCATE IT BUT NOT OPEN IT. HANDLE * 00042**2
*                        OPEN ERROR.                                  * 00043**2
*                                                                     * 00044**2
*********************************************************************** 00045**1
JOBLOG   CSECT                                                          00046**1
SFT8MVBF EQU   JOBLOG                                                   00047**1
         ENTRY SFT8MVBF                                                 00048**1
         STM   R14,R12,12(R13)         SAVE REGS                        00049**1
         BALR  R12,0                   LOAD BASE                        00050**1
         USING *,R12                   DECLARE BASE                     00051**1
         LR    R15,R13                 DO                               00052**1
         LA    R13,SAVE                   FORWARD AND                   00053**1
         ST    R13,8(R15)                 BACKWARD SAVEAREA             00054**1
         ST    R15,4(R13)                 CHAINING;                     00055**1
         ST    R1,INPARM           SAVE PARM LIST                       00056**1
*                                                                       00057**1
**       SETUP WORKAREAS FOR MESSAGE PROCESSING                         00058**1
*                                                                       00059**1
*        $BFGMSG WORKAR=MSGWORK,MSGAREA=MSGAREA                         00060**1
         $BFGMSG WORKAR=MSGWORK,MSGAREA=MSGAREA                         00061**1
         SPACE                                                          00062**1
*        ACCESS THIS JOB ID                                             00063**1
         SPACE                                                          00064**1
         USING PSA,R0                                                   00065**1
         L     R1,PSATOLD          POINT AT TCB                         00066**1
         L     R1,TCBJSCB-TCB(R1)  GET TO JSCB                          00067**1
         L     R1,JSCBACT-IEZJSCB(R1) GET TO ACTIVE JSCB                00068**1
         L     R1,JSCBSSIB-IEZJSCB(R1) GET TO GOOD SSIB                 00069**1
         USING SSIB,R1                                                  00070**1
         MVC   MYJBID,SSIBJBID     MOVE IN NAME                         00071**1
         OC    MYJBID+3(5),=C'00000'                                    00072**1
         DROP  R1                                                       00073**1
*                                                                       00074**1
**       PARSE THE PARM STRING IF ANY                                   00075**1
*                                                                       00076**1
         L     R2,INPARM           GET PARM LIST POINTER                00077**1
         L     R2,0(R2)            GET PARM STRING POINTER              00078**1
         CLC   0(2,R2),=H'0'       ANY STRING                           00079**1
         BE    TRYSYSIN            NOPE                                 00080**1
         MVI   FLAG,0              SET OFF ALL FLAGS                    00081**1
         XC    DSAREA,DSAREA       SET OFF ALL FLAGS                    00082**1
         KEYVAL (R2),KEYTAB                                             00083**1
         B     RCTBL(R15)          GO AND PROCESS IN LOOP               00084**1
TRYSYSIN DS    0H                                                       00085**1
*                                                                       00086**1
**       OPEN SYSIN AND PROCESS EACH CARD                               00087**1
*                                                                       00088**1
LOOPA    TM    SYSIN+48,X'10'      IS DCB OPEN                          00089**1
         BO    LOOPB               IF SO THEN READ CARD                 00090**1
         OPEN  (SYSIN,(INPUT))                                          00091**1
         TM    SYSIN+48,X'10'      IS DCB OPEN                          00092**1
         BZ    NOSYSIN             IF NOT THEN QUIT                     00093**1
LOOPB    GET   SYSIN,CARD                                               00094**1
         MVI   FLAG,0              SET OFF ALL FLAGS                    00095**1
         XC    DSAREA,DSAREA       SET OFF ALL FLAGS                    00096**1
         KEYVAL CRDHEAD,KEYTAB                                          00097**1
         B     RCTBL(R15)                                               00098**1
RCTBL    B     PROCESS             =0  CARD PARSED                      00099**1
         B     ERR1                =4  VALUE OF KEYWORD BAD             00100**1
         B     ERR2                =8  KEYWORD INVALID                  00101**1
         B     ERR3                =12 NUMBR OF VALUES WRONG            00102**1
         B     PROCESS             =16 CARD BLANK                       00103**1
         B     ERR4                =20 TYPE CHECK FAILED                00104**1
         B     ERR5                =24 LENGTH CHECK FAILED              00105**1
*                                                                       00106**1
**       VALUE OF KEYWORD INVALID                                       00107**1
*                                                                       00108**1
ERR1     DS    0H '                                                     00109**1
         LR    R2,R0               SAVE POINTER                         00110**1
         $BFGMSG 9,(C4,(R2))                                            00111**1
         B     LOOPA                                                    00112**1
*                                                                       00113**1
**       KEYWORD INVALID                                                00114**1
*                                                                       00115**1
ERR2     DS    0H                                                       00116**1
         LR    R2,R0               SAVE POINTER                         00117**1
         $BFGMSG 5,(C8,(R2))                                            00118**1
         B     LOOPA                                                    00119**1
*                                                                       00120**1
**       NUMBER OF VALUES WRONG                                         00121**1
*                                                                       00122**1
ERR3     DS    0H                                                       00123**1
         LR    R2,R0               SAVE POINTER                         00124**1
         $BFGMSG 6,(C4,(R2))                                            00125**1
         B     LOOPA                                                    00126**1
*                                                                       00127**1
**       TYPE CHECK FAILED                                              00128**1
*                                                                       00129**1
ERR4     DS    0H                                                       00130**1
         LR    R2,R0               SAVE POINTER                         00131**1
         $BFGMSG 7,(C4,(R2))                                            00132**1
         B     LOOPA                                                    00133**1
*                                                                       00134**1
**       LENGTH CHECK FAILED                                            00135**1
*                                                                       00136**1
ERR5     DS    0H                                                       00137**1
         LR    R2,R0               SAVE POINTER                         00138**1
         LR    R3,R1               SAVE POINTER                         00139**1
         $BFGMSG 8,(C4,(R2)),(C8,(R3))                                  00140**1
         B     LOOPA                                                    00141**1
*                                                                       00142**1
**       IF REQUESTED THEN DUMP OUT THE JLOG                            00143**1
*                                                                       00144**1
PROCESS  TM    FLAG,FJLOG          JLOG REQUESTED ?                     00145**1
         BZ    TRYJCL                                                   00146**1
         LA    R1,MYJBID           POINT TO MY JOBID                    00147**1
         LA    R0,2                THE DSID FOR JES LOG                 00148**1
         LA    R15,MOVEJES         GO AND MOVE IT                       00149**1
         BALR  R14,R15             GO AND MOVE IT                       00150**1
*                                                                       00151**1
**       IF REQUESTED THEN DUMP OUT THE JCL                             00152**1
*                                                                       00153**1
TRYJCL   TM    FLAG,FJCL           JCL REQUESTED ?                      00154**1
         BZ    TRYJMSG                                                  00155**1
         LA    R1,MYJBID           POINT TO MY JOBID                    00156**1
         LA    R0,3                THE DSID FOR JES JCL                 00157**1
         LA    R15,MOVEJES         GO AND MOVE IT                       00158**1
         BALR  R14,R15             GO AND MOVE IT                       00159**1
*                                                                       00160**1
**       IF REQUESTED THEN DUMP OUT THE JMSG                            00161**1
*                                                                       00162**1
TRYJMSG  TM    FLAG,FJMSG          JMSG REQUESTED ?                     00163**1
         BZ    TRYDSID                                                  00164**1
         LA    R1,MYJBID           POINT TO MY JOBID                    00165**1
         LA    R0,4                THE DSID FOR MVS ALLOCATION MSGS     00166**1
         LA    R15,MOVEJES         GO AND MOVE IT                       00167**1
         BALR  R14,R15             GO AND MOVE IT                       00168**1
*                                                                       00169**1
**       IF REQUESTED DO DSIDS                                          00170**1
*                                                                       00171**1
TRYDSID  TM    FLAG,FDSID          DSID REQUESTED ?                     00172**1
         BZ    LOOPA               EXIT IF NOT                          00173**1
         SR    R5,R5               CLEAR COUNT                          00174**1
         IC    R5,DSAREA           GET NUMBER TO DO                     00175**1
         LA    R4,DSAREA+1         POINT TO THE ONE TO DO               00176**1
         LTR   R5,R5               ANY TO DO                            00177**1
         BZ    LOOPA               IF NOT THEN ALL DONE                 00178**1
LOOP1    SR    R2,R2               CLEAR FOR LENGTH                     00179**1
         IC    R2,0(R4)            GET LENGTH OF DATA                   00180**1
         BCTR  R2,0                GET MACHING LENGTH                   00181**1
         EX    R2,PACKIT                                                00182**1
         LA    R4,2(R2,R4)                                              00183**1
         CVB   R0,DWORK            GET ID                               00184**1
         LA    R1,MYJBID                                                00185**1
         LA    R15,MOVEJES         GO AND MOVE IT                       00186**1
         BALR  R14,R15             GO AND MOVE IT                       00187**1
         BCT   R5,LOOP1            DO NEXT ID                           00188**1
         B     LOOPA               ALL DONE                             00189**1
PACKIT   PACK  DWORK,1(0,R4)                                            00190**1
*                                                                       00191**1
**       OUT OF SYSIN DATA                                              00192**1
*                                                                       00193**1
NOCARD   DS    0H                                                       00194**1
         CLOSE (SYSIN)                                                  00195**1
         B     EXITPGM             ALL DONE                             00196**1
*                                                                       00197**1
**       IF NO SYSIN AVAILABLE AND THERE WAS NO PARM STRING             00198**1
**       THEN JUST DUMP OUT THE JLOG                                    00199**1
*                                                                       00200**1
NOSYSIN  DS    0H                                                       00201**1
         L     R2,INPARM           GET PARM LIST POINTER                00202**1
         L     R2,0(R2)            GET PARM STRING POINTER              00203**1
         CLC   0(2,R2),=H'0'       ANY STRING                           00204**1
         BNE   EXITPGM             YES SO WE DID SOMETHING              00205**1
         LA    R1,MYJBID           POINT TO MY JOBID                    00206**1
         LA    R0,2                THE DSID FOR JES LOG                 00207**1
         LA    R15,MOVEJES         GO AND MOVE IT                       00208**1
         BALR  R14,R15             GO AND MOVE IT                       00209**1
*                                                                       00210**1
*  EXIT THE PROGRAM                                                     00211**1
*                                                                       00212**1
EXITPGM  L     R13,4(R13)                                               00213**1
         RETURN (14,12),RC=0                                            00214**1
         EJECT                                                          00215**1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 00216**1
*                                                                     * 00217**1
*        THIS SUBROUTINE MOVES ONE JES FILE TO THE OUTPUT             * 00218**1
*        DATASET.                                                     * 00219**1
*                                                                     * 00220**1
*        INPUT                                                        * 00221**1
*              R1  -->   8 BYTE JOBID                                 * 00222**1
*              R0  ===   DATASET NUMBER                               * 00223**1
*                                                                     * 00224**1
*        OUPUT                                                        * 00225**1
*              R15 ===   0   DATASET MOVED                            * 00226**1
*                        4   UNABLE TO ALLOCATE DATASET               * 00227**1
*                        8   ERROR OCCURED DURING MOVE                * 00228**1
*                                                                     * 00229**1
*                                                                     * 00230**1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* 00231**1
         PUSH  USING                                                    00232**1
MOVEJES  PROLOGUE SAVE=INLINE                                           00233**1
*                                                       ESA4.2 2/92 GLA 00234**1
**       BUILD DSN                                      ESA4.2 2/92 GLA 00235**1
*                                                       ESA4.2 2/92 GLA 00236**1
         MVC   DSN,=CL44' '        CLEAR FIELD          ESA4.2 2/92 GLA 00237**1
         L     R4,PSAAOLD          GET ASCB             ESA4.2 2/92 GLA 00238**1
         USING ASCB,R4                                  ESA4.2 2/92 GLA 00239**1
         ICM   R3,15,ASCBJBNI      GET JOB NAME         ESA4.2 2/92 GLA 00240**1
         BNZ   *+8                                      ESA4.2 2/92 GLA 00241**1
         L     R3,ASCBJBNS         GET STC NAME         ESA4.2 2/92 GLA 00242**1
         L     R4,ASCBASXB         POINT TO ASXB        ESA4.2 2/92 GLA 00243**1
         L     R4,ASXBSENV-ASXB(,R4) GET ACEE ADDR      ESA4.2 2/92 GLA 00244**1
         USING ACEE,R4                                  ESA4.2 2/92 GLA 00245**1
         SR    R5,R5               CLEAR REG            ESA4.2 2/92 GLA 00246**1
         IC    R5,ACEEUSRL         GET LENGTH           ESA4.2 2/92 GLA 00247**1
         MVC   DSN(8),ACEEUSRI     MOVE IN USERID       ESA4.2 2/92 GLA 00248**1
         DROP  R4                                       ESA4.2 2/92 GLA 00249**1
         LA    R5,DSN(R5)          POINT PAST USERID    ESA4.2 2/92 GLA 00250**1
         MVI   0(R5),C'.'          SET DELIMITER        ESA4.2 2/92 GLA 00251**1
         LA    R5,1(,R5)           BUMP POINTER         ESA4.2 2/92 GLA 00252**1
         MVC   0(8,R5),0(R3)       MOVE IN JOB NAME     ESA4.2 2/92 GLA 00253**1
         LA    R5,8(R5)            POINT PAST           ESA4.2 2/92 GLA 00254**1
MJ1      CLI   0(R5),C' '          END OF JOB NAME      ESA4.2 2/92 GLA 00255**1
         BNE   MJ2                 YES- FOUND IT        ESA4.2 2/92 GLA 00256**1
         BCTR  R5,0                BACK UP              ESA4.2 2/92 GLA 00257**1
         B     MJ1                 TRY AGAIN            ESA4.2 2/92 GLA 00258**1
MJ2      MVI   1(R5),C'.'          SET DELIMITER        ESA4.2 2/92 GLA 00259**1
         LA    R5,2(R5)            BUMP POINTER         ESA4.2 2/92 GLA 00260**1
         MVC   0(8,R5),0(R1)       MOVE IN ID           ESA4.2 2/92 GLA 00261**1
         MVC   8(2,R5),=C'.D'      SET NEXT DELIMITER AND HEADER/92 GLA 00262**1
         LA    R5,10(R5)           BUMP POINTER         ESA4.2 2/92 GLA 00263**1
         CVD   R0,DWORK            MAKE DECIMAL         ESA4.2 2/92 GLA 00264**1
         UNPK  0(7,R5),DWORK       PUT IN NUMBER        ESA4.2 2/92 GLA 00265**1
         OI    6(R5),X'F0'         CONVERT LAST DIGIT   ESA4.2 2/92 GLA 00266**1
         MVC   7(2,R5),=C'.?'      SET LAST CHARS       ESA4.2 2/92 GLA 00267**1
*                                                       ESA4.2 2/92 GLA 00268**1
**       NOW ALLOCATE IT                                ESA4.2 2/92 GLA 00269**1
*                                                       ESA4.2 2/92 GLA 00270**1
         MVC   INFO(4),=F'0'       ZERO OUT THE INFO CODES              00271**1
         LA    R1,DYNALLOC         POINT TO ALLOCATION                  00272**1
         LR    R5,R1               SAVE R1 IN CASE OF ABEND             00273**1
         DYNALLOC ALLOCATE THEM                                         00274**1
         LTR   R15,R15             CHECK ALLOCATION                     00275**1
         BZ    OPEN                                                     00276**1
         CLC   INFO(2),=X'0478'    IS DS UNACCESSIBLE                   00277**1
         BE    BD1                 YES SO DIFFERENT MESSAGE             00278**1
         $BFGMSG 1,(H2,INFO),(H2,INFO+2)                                00279**1
         DC    H'0'                                                     00280**1
         LA    R3,4                SET ALLOCATION ERROR                 00281**1
         B     ENDJES1                                                  00282**1
BD1      DS    0H                  CANT ACCESS MESSAGE                  00283**1
         $BFGMSG 10,(C5,DSID+1)    CHANGED FOR APAR OZ93770       VGA   00284**1
         DC    H'0'                                                     00285**1
         LA    R3,4                SET ALLOCATION ERROR                 00286**1
         B     ENDJES1                                                  00287**1
         SPACE 3                                                        00288**1
*                                                                       00289**1
**       OPEN THE JOB LOG AND OUTPUT FILE                               00290**1
**       THEN COPY IT                                                   00291**1
*                                                                       00292**1
OPEN     DS    0H                                                       00293**1
         USING IFGACB,R2           SETUP ADDRESS ABILITY                00294**1
         LA    R2,MACB                                                  00295**1
         MVC   ACBDDNM,DDNAME      SET DDNAME                           00296**1
         OPEN  (MACB,(INPUT),OUT,(EXTEND))                              00297**1
         LTR   R15,R15             GOOD GET                             00298**1
         BZ    GDOPEN              IF OK                                00299**1
         $BFGMSG 2,(H1,ACBERFLG)                                        00300**1
         B     EOF                                     ESA 4.2 02/17/92 00301**2
         DROP  R2                                                       00302**1
GDOPEN   NOP   0                                                        00303**1
         SPACE 3                                                        00304**1
LOOP     GET   RPL=MRPL            GET A RECORD                         00305**1
         LTR   R15,R15             GOOD GET                             00306**1
         BZ    GDGET               IF OK                                00307**1
         USING IFGRPL,R2                                                00308**1
         LA    R2,MRPL                                                  00309**1
*                                                                       00310**1
**       IF PHYSICAL READ ERROR THEN ASSUME EOF                         00311**1
*                                                                       00312**1
         CLI   RPLRTNCD,X'0C'      IS IT PHYSICAL ERROR                 00313**1
         BNE   BD2                                                      00314**1
         CLI   RPLERRCD,4          IS IT PHY READ ERROR                 00315**1
         BE    EOF                 YES SO MAKE EOF                      00316**1
BD2      DS    0H                                                       00317**1
         $BFGMSG 3,(H1,RPLRTNCD),(H1,RPLERRCD)                          00318**1
         DROP  R2                                                       00319**1
         LA    R3,8                SET RETURN CODE                      00320**1
         B     ENDJES2             AND EXIT                             00321**1
GDGET    DS    0H                                                       00322**1
         SHOWCB RPL=MRPL,AREA=LENGTH,LENGTH=4,FIELDS=(RECLEN)           00323**1
         LTR   R15,R15             SEE IF OK                            00324**1
         BZ    GDSHOW              YES                                  00325**1
         ST    R15,LENGTH                                               00326**1
         $BFGMSG 4,(H1,LENGTH+3)                                        00327**1
         LA    R3,8                SET RETURN CODE                      00328**1
         B     ENDJES2             AND EXIT                             00329**1
GDSHOW   DS    0H                                                       00330**1
         L     R1,LENGTH                                                00331**1
         LA    R1,4(R1)            ADD FOR RDW                          00332**1
         STH   R1,VBA                                                   00333**1
         PUT   OUT,VBA             OUTPUT LINE                          00334**1
         B     LOOP                                                     00335**1
*                                                                       00336**1
*  EXIT THE PROGRAM                                                     00337**1
*                                                                       00338**1
EOF      EQU   *                                                        00339**1
         SR    R3,R3                                                    00340**1
ENDJES2  CLOSE (MACB,,OUT)                                              00341**1
ENDJES1  L     R13,4(R13)                                               00342**1
         LR    R15,R3                                                   00343**1
         RETURN (14,12),RC=(15)                                         00344**1
         POP   USING                                                    00345**1
         EJECT                                                          00346**1
         PRINT NOGEN                                                    00347**1
         $BFGMSGD 1,'ALLOCATION FAILED ERRCD=¢, INFO=¢.',ROUTCDE=11     00348**1
         $BFGMSGD 2,' OPEN FAILED FDBK=¢.',ROUTCDE=11                   00349**1
         $BFGMSGD 3,' GET FAILED, RC=¢, ERRCD=¢.',ROUTCDE=11            00350**1
         $BFGMSGD 4,' SHOWCB FAILED, RC=¢.',ROUTCDE=11                  00351**1
         $BFGMSGD 5,' STRING STARTING WITH ''¢'' IS INVALID.',         X00352**1
               ROUTCDE=11                                               00353**1
         $BFGMSGD 6,' NUMBER OF VALUES IN ''¢'' IS ILLEGAL.',          X00354**1
               ROUTCDE=11                                               00355**1
         $BFGMSGD 7,' VALUE NOT NUMERIC FOR ''¢''.',                   X00356**1
               ROUTCDE=11                                               00357**1
         $BFGMSGD 8,' VALUE FOR ''¢'' THAT STARTS ''¢'' HAS WRONG LENGTH00358**1
               .',ROUTCDE=11                                            00359**1
         $BFGMSGD 9,' VALUE INVALID FOR ''¢''.',                       X00360**1
               ROUTCDE=11                                               00361**1
         $BFGMSGD 10,' DATASET UNAVAILABLE PROBABLY SPUN DSID=¢',      X00362**1
               ROUTCDE=11                                               00363**1
         EJECT                                                          00364**1
*                                                                       00365**1
**       INPUT CARD KEY WORDS                                           00366**1
*                                                                       00367**1
KEYTAB   KEYT  JLOG,,,,(0,0),                                          X00368**1
               FIELD1=(,O,FLAG,FJLOG)                                   00369**1
         KEYT  JCL,,,,(0,0),                                           X00370**1
               FIELD1=(,O,FLAG,FJCL)                                    00371**1
         KEYT  JMSG,,,,(0,0),                                          X00372**1
               FIELD1=(,O,FLAG,FJMSG)                                   00373**1
         KEYT  DSID,,DSAREA,NUMERIC,(1,9),                             X00374**1
               FIELD1=(,O,FLAG,FDSID),                                 X00375**1
               LEN=(1,5),END=YES        CHANGED FOR APAR OZ93770    VGA 00376**1
         PRINT GEN                                                      00377**1
         EJECT                                                          00378**1
*                                                                       00379**1
**       WORKAREAS FOR MAIN PROGRAM                                     00380**1
*                                                                       00381**1
SAVE     DS    18F                                                      00382**1
MSGWORK  DS    18F                                                      00383**1
INPARM   DS    F                   PARM LIST VALUE                      00384**1
MSGAREA  DS    CL133                                                    00385**1
MYJBID   DS    CL8                 SPACE FOR THIS JOB JBID              00386**1
FLAG     DC    X'00'               FLAGS                                00387**1
FJLOG    EQU   X'80'               DUMP JLOG ID=2                       00388**1
FJCL     EQU   X'40'               DUMP JCL ID=3                        00389**1
FJMSG    EQU   X'20'               DUMP JMSG ID=4                       00390**1
FDSID    EQU   X'10'               DUMP LIST OF DSIDS                   00391**1
DSAREA   DS    (1+(1+3)*9)C        AREA FOR MAX DATA                    00392**1
CRDHEAD  DC    H'72'                                                    00393**1
CARD     DS    CL80                                                     00394**1
SYSIN    DCB   DDNAME=SYSIN,                                           X00395**1
               LRECL=80,RECFM=FB,EODAD=NOCARD,                         X00396**1
               MACRF=(GM),DSORG=PS                                      00397**1
         EJECT                                                          00398**1
*                                                                       00399**1
**       WORKAREAS FOR DYNAMIC ALLOCATION                               00400**1
*                                                                       00401**1
         DS    0D                                                       00402**1
DWORK    DS    D                                                        00403**1
DYNALLOC DC    X'80',AL3(*+3)                                           00404**1
CODES    DC    X'1401000000000000',A(TEXT,0,0)                          00405**1
INFO     EQU   CODES+4,2                                                00406**1
TEXT     DC    A(TEXT1,TEXT2,TEST2A,TEST2B,TEST2C)                      00407**1
         DC    X'80',AL3(TEXT3)                                         00408**1
TEXT1    DC    X'005500010008'                DDNAME=                   00409**1
DDNAME   DC    CL8' '                                                   00410**1
TEST2A   DC    X'00520000'                    PERMANENT ALLOCATION      00411**1
TEST2B   DC    X'001C0000'                    FREE AT CLOSE             00412**1
TEST2C   DC    X'00620001000180'   DALSSAT(SYSIN REQ)   ESA4.2 2/92 GLA 00413**1
TEXT2    DC    X'005C0000'                    SSREQ                     00414**1
TEXT3    DC    AL2(2,1,L'DSN)                 DSNAME                    00415**1
DSN      DC    CL44' '                     CHANGED FOR ESA4.2 2/92 GLA  00416**1
*        DC    C'JES2.JOB08364.I0000002'   CHANGED FOR ESA 12/04/89 GLA 00417**1
*        DC    C'JES2.JOB08364.SI000002'   CHANGED FOR APAR OZ93770 VGA 00418**1
JBID     EQU   DSN+17,8                                                 00419**1
DSID     EQU   DSN+28,6                    CHANGED FOR APAR OZ93770 VGA 00420**1
         EJECT                                                          00421**1
*                                                                       00422**1
**       WORKAREAS FOR DATA MOVEMENT                                    00423**1
*                                                                       00424**1
LENGTH   DC    F'0'                                                     00425**1
EXLST    EXLST EODAD=(EOF)                                              00426**1
MACB     ACB   DDNAME=A,                                               X00427**1
               MACRF=(ADR,SEQ,IN),                                     X00428**1
               EXLST=EXLST                                              00429**1
MRPL     RPL   ACB=MACB,                                               X00430**1
               OPTCD=(ADR,SEQ,SYN,NUP,MVE),                            X00431**1
               AREA=LINE,                                              X00432**1
               AREALEN=133                                              00433**1
OUT      DCB   DDNAME=SYSPRINT,                                        X00434**1
               LRECL=137,BLKSIZE=141,RECFM=VB,                         X00435**1
               MACRF=(PM),DSORG=PS                                      00436**1
         DS    0F                                                       00437**1
VBA      DC    AL2(0,0)                                                 00438**1
LINE     DC    CL180' '                                                 00439**1
         REQUATE                                                        00440**1
         LTORG                                                          00441**1
         PRINT NOGEN                                                    00442**1
         IHAPSA                                                         00443**1
         IHAASCB ,                                      ESA4.2 2/92 GLA 00444**1
         IHAASXB ,                                      ESA4.2 2/92 GLA 00445**1
         IHAACEE ,                                      ESA4.2 2/92 GLA 00446**1
         IKJTCB                                                         00447**1
         IEFJSSIB                                                       00448**1
         IEZJSCB                                                        00449**1
         IFGACB                                                         00450**1
         IFGRPL                                                         00451**1
         END                                                            00452**1
