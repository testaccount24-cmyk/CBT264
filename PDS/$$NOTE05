           Note about the LOOKJ version of LOOK

------------------------------------------------------------
All of these remarks pertain to the newest 64-bit version of
LOOK, called LOOKN.  ABOVE THE BAR STORAGE can be examined
with LOOKN.
------------------------------------------------------------

Joe Reichman has made an attempt to fix the recovery routine in
LOOK so that it does not S0C4 when you type in a bad address.
His version of LOOK will now say "BAD ADDRESS" instead of
abending with a S0C4, and you can keep on using the program,
instead of abending out of it.

Joe has also fixed LOOK so it will not allocate user key CSA.  So
now, this version of LOOKJ will run without needing any tweaking
of bits, or changing settings in PARMLIB.  z/OS 2.4 will prohibit
the allocation of user key CSA altogether.

LOOKJ will not run (even in your own address space) unless it is
APF-authorized, and it will give you a message saying so.  To
authorize it, LOOKJ has to be in the AUTHCMD table in IKJTSOxx in
PARMLIB, or if you are running with an authorized STEPLIB, LOOKJ
has to be in the IKJEFTE2 CSECT of the IKJTABLS load module.
(See CBT Tape File 185 for more information.)  Of course, LOOKJ
must reside in an APF-authorized library, and be linkedited with
SETCODE AC(1).

Or you can use the AUCMD program from CBT File 300 to authorize
LOOKJ, and say:

TSO AUCMD LOOKJ

if you have authorized AUCMD in the IKJEFTE2 table.

In any case, LOOKJ should no longer abend, if you type in a bad
address.  If it does abend, please tell me so.

Sam Golob  -  May 10, 2017    sbgolob@cbttape.org

Please see member $$NOTE06.

