Example of changing an IBM macro, so CBMACS (in LOOK) will format
it and show more fields.  This example illustrates the general problem,
which may apply to many IBM macros.  It all depends on what you want
to see.

If a field is marked DS 0CLn'   ' (with prefix size of 0) then it
will not be formatted by CBMACS.

This particular example shows a certain field in the TSO Logon Work Area
(LWA) control block that I want to see, but CBMACS doesn't format it.
Here's why.  (See code below.)

We have modified the requisite IBM macro, IKJEFLWA from SYS1.MODGEN
as follows:

IBM's original macro IKJEFLWA contains the following lines to describe
the field LWAPRMLB, which we would like to see formatted:

*
LWAPROSP DS  1A                        ADDR of KEY 1 stack     @E21D2G9
*
LWAPRMLB DS 0F   <--- label was here   PARMLIB FLAGS           @E1502I7
         DS X                                                  @E1502I7
LWATAPST EQU X'80'                     1 - INDICATES TAP CAME FROM
*                                          STEPLIB             @E1502I7
LWATNSST EQU X'40'                     1 - INDICATES TNS CAME FROM
*                                          STEPLIB             @E1502I7
LWATE2ST EQU X'20'                     1 - INDICATES TE2 CAME FROM
*                                          STEPLIB             @E1502I7
LWATE8ST EQU X'10'                     1 - INDICATES TE8 CAME FROM
*                                          STEPLIB             @E1502I7
         DS 3X                                                 @PEI0253
*                                                              @PEI0253

Notice that this field is marked as DS 0F, and since it doesn't
connote the definition of any actual space, when we assemble CBMACS,
the field will not be formatted.  Upon examination of the field we
REALLY want to see, which is the first byte, we must make another
copy of macro IKJEFLWA to assemble with.  These lines are therefore
changed to the following:

*
LWAPROSP DS  1A                        ADDR of KEY 1 stack     @E21D2G9
*
         DS 0F                         PARMLIB FLAGS           @E1502I7
LWAPRMLB DS X      <--- move label here                        @E1502I7
LWATAPST EQU X'80'                     1 - INDICATES TAP CAME FROM
*                                          STEPLIB             @E1502I7
LWATNSST EQU X'40'                     1 - INDICATES TNS CAME FROM
*                                          STEPLIB             @E1502I7
LWATE2ST EQU X'20'                     1 - INDICATES TE2 CAME FROM
*                                          STEPLIB             @E1502I7
LWATE8ST EQU X'10'                     1 - INDICATES TE8 CAME FROM
*                                          STEPLIB             @E1502I7
         DS 3X                                                 @PEI0253
*                                                              @PEI0253

where the label LWAPRMLB is moved down one line, so it defines
the actual storage that we want to see.

Since I think it is improper to include the actual IKJEFLWA macro
(even a modified version - I think) on the CBT Tape, I have to just
show you which lines to modify, when you assemble CBMACS with it.

The correct extra field LWAPRMLB whose contents we want to see, will
now be pointing to the real storage that will now be formatted and
seen.  (Illustration is below.)

I would not put my modified copy of IKJEFLWA on the CBT Tape, so I
privately assembled LOOK with it on my own system, and I put that LOOK
load module on File 035 (the load module library) on the CBT Tape.
To reassemble source, you have to do something like the JCL that is
in member LOOK$, if the modified IKJEFLWA macro is in the pds
SBGOLOB.LOOK.INSTALL (in that example JCL).

All the best of everything to all of you...

Sam Golob     sbgolob@cbttape.org

Illustration:  Display extra field (marked with asterisks)
------------

LOOK COMMAND - DISPLAY VIRTUAL MEMORY      DISPLAY ASID= 002E
ENTER CMD -
LAST CMD  - LLWA
                          009FCC88  LWA
 ICART   ........          STCK    009C357C  PUTL    009C358C
 PTGT    009C359C  GETL    009C35AC  C441    009C35BC  PHAS2   009C3FEC
 IOBUF   00000000  BLK     0   RESV4   ...     LWC     00000000
 ECBA    00000000  CTDBC   009C346C  RAP     000089D0  EXITP   7F4654D0
 WHOIF   0000000A  LACCT   ACCT      LPROC   ISPFPROC          FLAG1   30
 FLAG2   0000  CTLS2   00  RTRAS   009CE230  SRWA1   009C0258
 DCBCT   00000000  T441R   009C305C  PROSP   00000000  PRMLB   F0
                                                       **********
 TAPLN   0000  TNSLN   0000  TE2LN   0A78  TE8LN   0000  GENER   0000
 SECL    ........          00026   009C35CC  00027   009C36DC
 CT429   009BD030  SVTAD   00000000  STGST   009BD6D8  STGEN   009BF297
 CNCCB   7F467EB8  CNPRF   EN    TERM    000000C1  TOKEN   ........
 ADVLF   7F464F50  VCPPL   00000000  VECBP   00000000  VJST    00000000
 VFLGS   00  TSLEN   00000000  TMPPB   00000000  DYSEG   7F464FE0
 DTSEG   7F467E28  ISPDT   00000000  MSRM@   00000000  TSTTR   00000000
 FREE    00000000

Similarly, if you want to see the values in field LWAICART, you should
change the field description from CL8 to XL8.

Same with LWARESV4, LWASECL and LWATOKEN.  Change the C to X.
Then you will see the actual (hex) value of these fields.

